plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {

    ext {
        nameSpace = 'com.neeraj.data'
    }
    namespace "$nameSpace"
    compileSdk rootProject.ext.app_config.compileSdkVersion

    defaultConfig {
        minSdk rootProject.ext.app_config.minSdkVersion
        targetSdk rootProject.ext.app_config.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }

    flavorDimensions "environment"
    productFlavors {
        bookDemo {
            dimension "environment"
            buildConfigField("String", "API_KEY", API_KEY)
            buildConfigField("String", "BASE_URL", BASE_URL)
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.app_config.javaVersion
        targetCompatibility rootProject.ext.app_config.javaVersion
    }
    kotlinOptions {
        jvmTarget = rootProject.ext.app_config.jvmTarget
    }

    buildFeatures {
        buildConfig = true
    }
}

dependencies {

    implementation rootProject.ext.dependencies.coreJetpack
    implementation platform(rootProject.ext.dependencies.kotlinBom)
    implementation rootProject.ext.dependencies.appCompat
    implementation rootProject.ext.dependencies.material

    testImplementation rootProject.ext.testDependencies.junit
    testImplementation rootProject.ext.testDependencies.mockk
    testImplementation rootProject.ext.testDependencies.coroutinesTest

    implementation rootProject.ext.dependencies.hilt
    kapt rootProject.ext.dependencies.hiltCompiler
    implementation rootProject.ext.dependencies.retrofit
    implementation rootProject.ext.dependencies.retrofitConverter

    //common module
    implementation project(path: ':common')
    //domain module
    implementation project(path: ':features:bookinfo:domain')


}